# SG-POS Development Environment Configuration
# Copy this file to .env.dev and fill in the values.
# IMPORTANT: Ensure .env.dev is NOT committed to version control in production!

# --- PostgreSQL Database Configuration ---
# These are used by both Docker Compose to initialize the DB
# and by the application to connect to it.
POSTGRES_USER=sgpos_dev_user
POSTGRES_PASSWORD=a_very_secure_password_for_dev # *** REPLACE WITH A STRONG PASSWORD ***
POSTGRES_DB=sgpos_dev

# --- Application Configuration ---
# The natively-run Python app will read this file via app/core/config.py.
DATABASE_URL="postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:5432/${POSTGRES_DB}"

# Application-level settings
APP_ENV=development
DEBUG=True
LOG_LEVEL=DEBUG # DEBUG, INFO, WARNING, ERROR, CRITICAL
SECRET_KEY=a_super_secret_dev_key_that_is_not_for_production # *** REPLACE WITH A STRONG, UNIQUE KEY ***

# --- Example: For stage 4 to simulate current user/company/outlet context ---
# In a real app, these would come from authentication/session management
CURRENT_COMPANY_ID=00000000-0000-0000-0000-000000000001
CURRENT_OUTLET_ID=00000000-0000-0000-0000-000000000002
CURRENT_USER_ID=00000000-0000-0000-0000-000000000003

